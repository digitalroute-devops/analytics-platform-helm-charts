apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}

  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}

      initContainers:
      - name: "init"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: {{ .Release.Name }}-config
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: {{ .Release.Name }}-storage
            mountPath: "/root/airflow/dags/"
            subPath: dags
        env:
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}
                key: sql-alchemy-conn
        command:
          - "bash"
        args:
          - "-cx"
          - "cd /usr/local/lib/python2.7/dist-packages/airflow && cp -R example_dags/* /root/airflow/dags/ && airflow initdb && alembic upgrade heads && (airflow create_user -u airflow -l airflow -f jon -e airflow@apache.org -r Admin -p airflow || true)"

      containers:

        - name: webserver
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          command:
            - "/bootstrap.sh"
          args:
            - "webserver"
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.airflow.image.port }}
          env:
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: sql-alchemy-conn

          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: {{ .Release.Name }}-storage
              mountPath: "/root/airflow/dags/"
              subPath: dags
            - name: {{ .Release.Name }}-storage
              mountPath: "/root/airflow/logs/"
              subPath: logs

          livenessProbe:
            exec:
              command:
                - ls
                - /root/airflow/airflow-webserver.pid
            initialDelaySeconds: 15
            periodSeconds: 5

        - name: scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          command:
            - "/bootstrap.sh"
          args:
            - "scheduler"
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.airflow.image.port }}
          env:
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: sql-alchemy-conn

          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: {{ .Release.Name }}-storage
              mountPath: "/root/airflow/dags/"
              subPath: dags
            - name: {{ .Release.Name }}-storage
              mountPath: "/root/airflow/logs/"
              subPath: logs

          # livenessProbe:
          #   exec:
          #     command:
          #       - ls
          #       - /root/airflow/airflow-scheduler.pid
          #   initialDelaySeconds: 15
          #   periodSeconds: 5

      volumes:
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-storage
