apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}

  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}

      initContainers:
      - name: "init"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: {{ .Release.Name }}-config
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: {{ .Release.Name }}-dags
            mountPath: "/root/airflow/dags/"
        env:
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}
                key: sql-alchemy-conn
        command:
          - "bash"
        args:
          - "-cx"
          - "cd /usr/local/lib/python2.7/dist-packages/airflow && cp -R example_dags/* /root/airflow/dags/ && airflow initdb && alembic upgrade heads && (airflow create_user --role Admin --username {{ .Values.airflow.admin.username }} --password {{ .Values.airflow.admin.password }} --firstname {{ .Values.airflow.admin.username }} --lastname {{ .Values.airflow.admin.username }} --email {{ .Values.airflow.admin.email }} || true)"

      containers:

        - name: webserver
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          command:
            - "/bootstrap.sh"
          args:
            - "webserver"
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.airflow.image.port }}
          env:
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: sql-alchemy-conn

          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: {{ .Release.Name }}-dags
              mountPath: "/root/airflow/dags/"
            - name: {{ .Release.Name }}-logs
              mountPath: "/root/airflow/logs/"
          livenessProbe:
            exec:
              command:
                - ls
                - /root/airflow/airflow-webserver.pid
            initialDelaySeconds: 15
            periodSeconds: 5

        - name: scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          command:
            - "/bootstrap.sh"
          args:
            - "scheduler"
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.airflow.image.port }}
          env:
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: sql-alchemy-conn

          volumeMounts:
            - name: {{ .Release.Name }}-config
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: {{ .Release.Name }}-dags
              mountPath: "/root/airflow/dags/"
            - name: {{ .Release.Name }}-logs
              mountPath: "/root/airflow/logs/"
      volumes:
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}
        - name: {{ .Release.Name }}-dags
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-dags
        - name: {{ .Release.Name }}-logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-logs